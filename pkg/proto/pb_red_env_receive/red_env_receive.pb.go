// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: pb_red_env_receive/red_env_receive.proto

package pb_red_env_receive

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb_enum "lark/pkg/proto/pb_enum"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GrabRedEnvelopeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvId int64 `protobuf:"varint,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"` // 红包ID
	Uid   int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                  // 用户ID
}

func (x *GrabRedEnvelopeReq) Reset() {
	*x = GrabRedEnvelopeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrabRedEnvelopeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrabRedEnvelopeReq) ProtoMessage() {}

func (x *GrabRedEnvelopeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrabRedEnvelopeReq.ProtoReflect.Descriptor instead.
func (*GrabRedEnvelopeReq) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{0}
}

func (x *GrabRedEnvelopeReq) GetEnvId() int64 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *GrabRedEnvelopeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GrabRedEnvelopeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result *GrabResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GrabRedEnvelopeResp) Reset() {
	*x = GrabRedEnvelopeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrabRedEnvelopeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrabRedEnvelopeResp) ProtoMessage() {}

func (x *GrabRedEnvelopeResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrabRedEnvelopeResp.ProtoReflect.Descriptor instead.
func (*GrabRedEnvelopeResp) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{1}
}

func (x *GrabRedEnvelopeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GrabRedEnvelopeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GrabRedEnvelopeResp) GetResult() *GrabResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GrabResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      pb_enum.GRAB_RESULT `protobuf:"varint,1,opt,name=code,proto3,enum=pb_enum.GRAB_RESULT" json:"code,omitempty"`    // 结果代码
	EnvId     int64               `protobuf:"varint,2,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`              // 红包ID
	RedEnvKey string              `protobuf:"bytes,3,opt,name=red_env_key,json=redEnvKey,proto3" json:"red_env_key,omitempty"` // 红包key
}

func (x *GrabResult) Reset() {
	*x = GrabResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrabResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrabResult) ProtoMessage() {}

func (x *GrabResult) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrabResult.ProtoReflect.Descriptor instead.
func (*GrabResult) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{2}
}

func (x *GrabResult) GetCode() pb_enum.GRAB_RESULT {
	if x != nil {
		return x.Code
	}
	return pb_enum.GRAB_RESULT(0)
}

func (x *GrabResult) GetEnvId() int64 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *GrabResult) GetRedEnvKey() string {
	if x != nil {
		return x.RedEnvKey
	}
	return ""
}

type OpenRedEnvelopeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvId     int64  `protobuf:"varint,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`              // 红包ID
	Uid       int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                               // 用户ID
	RedEnvKey string `protobuf:"bytes,3,opt,name=red_env_key,json=redEnvKey,proto3" json:"red_env_key,omitempty"` // 红包key
}

func (x *OpenRedEnvelopeReq) Reset() {
	*x = OpenRedEnvelopeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRedEnvelopeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRedEnvelopeReq) ProtoMessage() {}

func (x *OpenRedEnvelopeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRedEnvelopeReq.ProtoReflect.Descriptor instead.
func (*OpenRedEnvelopeReq) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{3}
}

func (x *OpenRedEnvelopeReq) GetEnvId() int64 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *OpenRedEnvelopeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *OpenRedEnvelopeReq) GetRedEnvKey() string {
	if x != nil {
		return x.RedEnvKey
	}
	return ""
}

type OpenRedEnvelopeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result *OpenResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *OpenRedEnvelopeResp) Reset() {
	*x = OpenRedEnvelopeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRedEnvelopeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRedEnvelopeResp) ProtoMessage() {}

func (x *OpenRedEnvelopeResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRedEnvelopeResp.ProtoReflect.Descriptor instead.
func (*OpenRedEnvelopeResp) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{4}
}

func (x *OpenRedEnvelopeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OpenRedEnvelopeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OpenRedEnvelopeResp) GetResult() *OpenResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type OpenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          pb_enum.OPEN_RESULT `protobuf:"varint,1,opt,name=code,proto3,enum=pb_enum.OPEN_RESULT" json:"code,omitempty"`               // 结果代码
	EnvId         int64               `protobuf:"varint,2,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`                         // 红包ID
	ReceiveAmount int64               `protobuf:"varint,3,opt,name=receive_amount,json=receiveAmount,proto3" json:"receive_amount,omitempty"` // 领取金额
}

func (x *OpenResult) Reset() {
	*x = OpenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResult) ProtoMessage() {}

func (x *OpenResult) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResult.ProtoReflect.Descriptor instead.
func (*OpenResult) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{5}
}

func (x *OpenResult) GetCode() pb_enum.OPEN_RESULT {
	if x != nil {
		return x.Code
	}
	return pb_enum.OPEN_RESULT(0)
}

func (x *OpenResult) GetEnvId() int64 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *OpenResult) GetReceiveAmount() int64 {
	if x != nil {
		return x.ReceiveAmount
	}
	return 0
}

type RedEnvelopeReceive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvId int64 `protobuf:"varint,1,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"` // 红包ID
	Uid   int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                  // 用户ID
}

func (x *RedEnvelopeReceive) Reset() {
	*x = RedEnvelopeReceive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedEnvelopeReceive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedEnvelopeReceive) ProtoMessage() {}

func (x *RedEnvelopeReceive) ProtoReflect() protoreflect.Message {
	mi := &file_pb_red_env_receive_red_env_receive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedEnvelopeReceive.ProtoReflect.Descriptor instead.
func (*RedEnvelopeReceive) Descriptor() ([]byte, []int) {
	return file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP(), []int{6}
}

func (x *RedEnvelopeReceive) GetEnvId() int64 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *RedEnvelopeReceive) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_pb_red_env_receive_red_env_receive_proto protoreflect.FileDescriptor

var file_pb_red_env_receive_red_env_receive_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x2f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x62, 0x5f, 0x72,
	0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x1a, 0x12,
	0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x12, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x73, 0x0a, 0x13, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x47, 0x52, 0x41,
	0x42, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x64, 0x45,
	0x6e, 0x76, 0x4b, 0x65, 0x79, 0x22, 0x5d, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x64,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x65,
	0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x76,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x64, 0x45, 0x6e,
	0x76, 0x4b, 0x65, 0x79, 0x22, 0x73, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x64, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x0a, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x3d, 0x0a, 0x12, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x32, 0xd7,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x62, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x64,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x70, 0x62,
	0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x2e, 0x47, 0x72, 0x61, 0x62, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x64, 0x45,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x29, 0x5a, 0x27, 0x2e, 0x2f, 0x70, 0x62,
	0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x3b, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_red_env_receive_red_env_receive_proto_rawDescOnce sync.Once
	file_pb_red_env_receive_red_env_receive_proto_rawDescData = file_pb_red_env_receive_red_env_receive_proto_rawDesc
)

func file_pb_red_env_receive_red_env_receive_proto_rawDescGZIP() []byte {
	file_pb_red_env_receive_red_env_receive_proto_rawDescOnce.Do(func() {
		file_pb_red_env_receive_red_env_receive_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_red_env_receive_red_env_receive_proto_rawDescData)
	})
	return file_pb_red_env_receive_red_env_receive_proto_rawDescData
}

var file_pb_red_env_receive_red_env_receive_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pb_red_env_receive_red_env_receive_proto_goTypes = []interface{}{
	(*GrabRedEnvelopeReq)(nil),  // 0: pb_red_env_receive.GrabRedEnvelopeReq
	(*GrabRedEnvelopeResp)(nil), // 1: pb_red_env_receive.GrabRedEnvelopeResp
	(*GrabResult)(nil),          // 2: pb_red_env_receive.GrabResult
	(*OpenRedEnvelopeReq)(nil),  // 3: pb_red_env_receive.OpenRedEnvelopeReq
	(*OpenRedEnvelopeResp)(nil), // 4: pb_red_env_receive.OpenRedEnvelopeResp
	(*OpenResult)(nil),          // 5: pb_red_env_receive.OpenResult
	(*RedEnvelopeReceive)(nil),  // 6: pb_red_env_receive.RedEnvelopeReceive
	(pb_enum.GRAB_RESULT)(0),    // 7: pb_enum.GRAB_RESULT
	(pb_enum.OPEN_RESULT)(0),    // 8: pb_enum.OPEN_RESULT
}
var file_pb_red_env_receive_red_env_receive_proto_depIdxs = []int32{
	2, // 0: pb_red_env_receive.GrabRedEnvelopeResp.result:type_name -> pb_red_env_receive.GrabResult
	7, // 1: pb_red_env_receive.GrabResult.code:type_name -> pb_enum.GRAB_RESULT
	5, // 2: pb_red_env_receive.OpenRedEnvelopeResp.result:type_name -> pb_red_env_receive.OpenResult
	8, // 3: pb_red_env_receive.OpenResult.code:type_name -> pb_enum.OPEN_RESULT
	0, // 4: pb_red_env_receive.RedEnvReceive.GrabRedEnvelope:input_type -> pb_red_env_receive.GrabRedEnvelopeReq
	3, // 5: pb_red_env_receive.RedEnvReceive.OpenRedEnvelope:input_type -> pb_red_env_receive.OpenRedEnvelopeReq
	1, // 6: pb_red_env_receive.RedEnvReceive.GrabRedEnvelope:output_type -> pb_red_env_receive.GrabRedEnvelopeResp
	4, // 7: pb_red_env_receive.RedEnvReceive.OpenRedEnvelope:output_type -> pb_red_env_receive.OpenRedEnvelopeResp
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pb_red_env_receive_red_env_receive_proto_init() }
func file_pb_red_env_receive_red_env_receive_proto_init() {
	if File_pb_red_env_receive_red_env_receive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrabRedEnvelopeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrabRedEnvelopeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrabResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRedEnvelopeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRedEnvelopeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_red_env_receive_red_env_receive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedEnvelopeReceive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_red_env_receive_red_env_receive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_red_env_receive_red_env_receive_proto_goTypes,
		DependencyIndexes: file_pb_red_env_receive_red_env_receive_proto_depIdxs,
		MessageInfos:      file_pb_red_env_receive_red_env_receive_proto_msgTypes,
	}.Build()
	File_pb_red_env_receive_red_env_receive_proto = out.File
	file_pb_red_env_receive_red_env_receive_proto_rawDesc = nil
	file_pb_red_env_receive_red_env_receive_proto_goTypes = nil
	file_pb_red_env_receive_red_env_receive_proto_depIdxs = nil
}
